<span style="font-size:10px;line-height:1.3em;">先建立一个单链表<span style="font-family:Times;line-height:1.3em;">L</span><wbr/>，以“<span style="font-family:Times;line-height:1.3em;">0</span><wbr/>”为结束符；实现查找功能，如输入数据不存在应报错；实现制定位置插入功能；实现删除功能，如输入数据不存在应报错；实现修改功能，如输入数据不存在应报错；利用主菜单实现以上所有功能，并输出。</span><wbr/><br/>#include &lt;stdio.h&gt; <br/>#define elemtype int <br/>struct node <br/>{ <br/>elemtype data; <br/>node *next; <br/>}; <br/>struct linklist <br/>{ <br/>node *head; <br/>node *hcreat() <br/>{ node *s,*p; <br/>&nbsp;&nbsp;elemtype i; <br/>&nbsp;&nbsp;printf(&quot;输入元素，到0为止:&quot;); <br/>&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;i);&nbsp;&nbsp; <br/>&nbsp;&nbsp;p=new node; <br/>&nbsp;&nbsp;head=p; <br/>&nbsp;&nbsp;p-&gt;next=NULL; <br/>&nbsp;&nbsp;while(i) <br/>&nbsp;&nbsp;{ s=new node; <br/>&nbsp;&nbsp; s-&gt;data=i; <br/>&nbsp;&nbsp; p-&gt;next=s; <br/>&nbsp;&nbsp; s-&gt;next=NULL; <br/>&nbsp;&nbsp; p=s; <br/>&nbsp;&nbsp; scanf(&quot;%d&quot;,&amp;i); <br/>&nbsp;&nbsp;} <br/>&nbsp;&nbsp;return head; <br/>} <br/>node *locate(node *head,elemtype x) <br/>{ <br/>&nbsp;&nbsp;printf(&quot;查找x:&quot;); <br/>&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;x); <br/>&nbsp;&nbsp;int j=1; <br/>&nbsp;&nbsp;node *p; <br/>&nbsp;&nbsp;p=head-&gt;next; <br/>&nbsp;&nbsp;while((p!=NULL)&amp;&amp;(p-&gt;data!=x)) <br/>&nbsp;&nbsp;{p=p-&gt;next&nbsp;&nbsp; ; <br/>&nbsp;&nbsp; j++; <br/>&nbsp;&nbsp;} <br/>&nbsp;&nbsp;if(p==NULL) <br/>&nbsp;&nbsp; printf(&quot;不存在要查找的数!\n&quot;); <br/>&nbsp;&nbsp;else <br/>&nbsp;&nbsp; printf(&quot;所查数为第%d位&quot;,j); <br/>&nbsp;&nbsp;return p; <br/>&nbsp;&nbsp; <br/>} <br/>void insert(node *head,elemtype x,elemtype y) <br/>{node *q,*p,*s; <br/>&nbsp;&nbsp;printf(&quot;将y插入x之前：\n&quot;); <br/>&nbsp;&nbsp;scanf(&quot;%d %d&quot;,&amp;y,&amp;x); <br/>&nbsp;&nbsp;s=new node; <br/>&nbsp;&nbsp;s-&gt;data=y&nbsp;&nbsp;&nbsp;&nbsp; ; <br/>&nbsp;&nbsp;q=head; <br/>&nbsp;&nbsp;p=q-&gt;next; <br/>&nbsp;&nbsp;while((p!=NULL)&amp;&amp;(p-&gt;data!=x)) //查找x的指针 <br/>&nbsp;&nbsp; { <br/>&nbsp;&nbsp; q=q-&gt;next; <br/>&nbsp;&nbsp; p=p-&gt;next; <br/>&nbsp;&nbsp; } <br/>&nbsp;&nbsp;if(p==NULL) <br/>&nbsp;&nbsp; printf(&quot;不存在此%d\n&quot;,x); <br/>&nbsp;&nbsp;else <br/>&nbsp;&nbsp;{s-&gt;next = q-&gt;next&nbsp;&nbsp;&nbsp;&nbsp; ; <br/>&nbsp;&nbsp;q-&gt;next=s; //插入y <br/>&nbsp;&nbsp;} <br/>} <br/>void delete1(node *head,elemtype x) <br/>{ node *p,*q; <br/>&nbsp;&nbsp;q=head; <br/>&nbsp;&nbsp;p=head-&gt;next; <br/>&nbsp;&nbsp;printf(&quot;删除x:\n&quot;); <br/>&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;x); <br/>&nbsp;&nbsp;while((p!=NULL)&amp;&amp;(p-&gt;data!=x)) <br/>&nbsp;&nbsp;{ q=p; <br/>&nbsp;&nbsp; p=p-&gt;next; <br/>&nbsp;&nbsp;} <br/>&nbsp;&nbsp;if(p==NULL) <br/>&nbsp;&nbsp; printf(&quot;不存在要删除的数 \n&quot;); <br/>&nbsp;&nbsp;else <br/>&nbsp;&nbsp;{ q-&gt;next=p-&gt;next; <br/>&nbsp;&nbsp; delete(p); <br/>&nbsp;&nbsp;} <br/>} <br/>void change(node *head,elemtype x,elemtype y) <br/>{ node *s,*q; <br/>&nbsp;&nbsp;printf(&quot;要改x:\n&quot;);&nbsp;&nbsp; <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;x); <br/>&nbsp;&nbsp; <br/>&nbsp;&nbsp;s=new node; <br/>&nbsp;&nbsp; <br/>&nbsp;&nbsp;q=head; <br/>&nbsp;&nbsp; <br/>&nbsp;&nbsp;while((q!=NULL)&amp;&amp;(q-&gt;data!=x)) //查找x的指针 <br/>&nbsp;&nbsp;{ <br/>&nbsp;&nbsp; q=q-&gt;next; <br/>&nbsp;&nbsp;} <br/>&nbsp;&nbsp;if(q==NULL) <br/>&nbsp;&nbsp; printf(&quot;不存在要改的数\n&quot;); <br/>&nbsp;&nbsp;else <br/>&nbsp;&nbsp;{ printf(&quot;为y:\n&quot;); <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;y&nbsp;&nbsp;&nbsp;&nbsp;); <br/>&nbsp;&nbsp; <br/>&nbsp;&nbsp; s-&gt;data=y; <br/>&nbsp;&nbsp; *q=*s;&nbsp;&nbsp; //将x改为y <br/>&nbsp;&nbsp;} <br/>} <br/>void print(node *head) <br/>{ node *p; <br/>&nbsp;&nbsp;p=head-&gt;next; <br/>&nbsp;&nbsp;printf(&quot;结果\n&quot;); <br/>&nbsp;&nbsp;while(p!=NULL) <br/>&nbsp;&nbsp;{ <br/>&nbsp;&nbsp; printf(&quot;%d&quot;,&nbsp;&nbsp;&nbsp;&nbsp;*p&nbsp;&nbsp;&nbsp;&nbsp; ); <br/>&nbsp;&nbsp; printf(&quot;\n&quot;); <br/>&nbsp;&nbsp; p=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;next&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; <br/>&nbsp;&nbsp;} <br/>} <br/>}; <br/>void main() <br/>{ linklist&nbsp;&nbsp; l&nbsp;&nbsp;&nbsp;&nbsp;; <br/>elemtype x=0,y=0; <br/>int k; <br/>node *h; <br/>h=l.hcreat (); <br/>printf(&quot;1.插入&nbsp;&nbsp;2.删除 3.查找 4.修改 5.输出 \n&quot;); <br/>printf(&quot;选择1~5否则退出：\n&quot;); <br/>scanf(&quot;%d&quot;,&amp;k); <br/>while((k&gt;=1)&amp;&amp;(k&lt;=5)) <br/>{ <br/>&nbsp;&nbsp;switch(k) <br/>&nbsp;&nbsp;{ <br/>&nbsp;&nbsp;case 1: l.insert (h,x,y); <br/>&nbsp;&nbsp;&nbsp;&nbsp;l.print (h); <br/>&nbsp;&nbsp;&nbsp;&nbsp;break; <br/>&nbsp;&nbsp;case 2: l.delete1 (h,x); <br/>&nbsp;&nbsp;&nbsp;&nbsp;l.print (h); <br/>&nbsp;&nbsp;&nbsp;&nbsp;break; <br/>&nbsp;&nbsp;case 3: l.locate(h,x); <br/>&nbsp;&nbsp;&nbsp;&nbsp;break; <br/>&nbsp;&nbsp;case 4: l.change (h,x,y); <br/>&nbsp;&nbsp;&nbsp;&nbsp;l.print (h); <br/>&nbsp;&nbsp;&nbsp;&nbsp;break; <br/>&nbsp;&nbsp;case 5: l.print (h); <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br/>&nbsp;&nbsp;} <br/>&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;选择1~5否则退出：\n&quot;); <br/>&nbsp;&nbsp;scanf(&quot;%d&quot;,&amp;k); <br/>&nbsp;&nbsp; <br/>} <br/>}